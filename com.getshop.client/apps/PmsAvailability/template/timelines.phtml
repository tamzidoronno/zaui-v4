<div class='selectedforbookingarea'></div>
<div class="closemodalarea"></div>
<?
/* @var $this ns_28886d7d_91d6_409a_a455_9351a426bed5\PmsAvailability */

$items = $this->getItems();
$timelines = $this->getData();
$types = $this->getTypes();
$typesIndexed = $this->indexList($types);
$sorting = $this->getSortType();
$allInOne = false;
if($sorting == "room") {
    $allInOne = true;
}

$needSortingTypes = false;
foreach($types as $type) {
    if($type->orderAvailability > 0) {
        $needSortingTypes = true;
    }
}

if($needSortingTypes) {
    $sortedtypes = array();
    foreach($types as $type) {
        $sortedtypes[$type->orderAvailability] = $type;
    }
    ksort($sortedtypes);
    $types = $this->indexList($sortedtypes);
}


$typecounter = array();
foreach($types as $type) {
    foreach($items as $itm) {
        if($itm->bookingItemTypeId == $type->id) {
            if(!isset($typecounter[$itm->bookingItemTypeId])) { $typecounter[$itm->bookingItemTypeId] = 0; }
            $typecounter[$itm->bookingItemTypeId]++;
        }
    }
}

$cats = $this->getCategoryFilter();
foreach ($types as $type) {
    if(sizeof($cats) > 0 && !in_array($type->id, $cats) && !$allInOne) {
        continue;
    }
?>
    <div id="errorContainer"></div>
    <div class='type_line' typeid="<? echo $type->id; ?>">
        
        <div class='timeline_item_name'>
            
            <?
            echo "<div class='category_name'>";
            if(!$allInOne) {
                echo $type->name;
            }
            echo "</div>";
            foreach ($items as $item) {
                if ($item->bookingItemTypeId != $type->id && !$allInOne) {
                    continue;
                }
                if($allInOne && sizeof($cats) > 0 && !in_array($item->bookingItemTypeId, $cats)) {
                    continue;
                }
                
                echo "<div class='item_name'>";
                echo $item->bookingItemName . " " . $typesIndexed[$item->bookingItemTypeId]->name;
                echo "</div>";
            }
            ?>
        </div>
        
        <div class='timeline'>
            <?
            
            $count = array();
            $j = 0;
            $typeCount = 0;
            
            foreach ($items as $item) {
                if ($item->bookingItemTypeId != $type->id && !$allInOne) { continue; }
                if($allInOne && sizeof($cats) > 0 && !in_array($item->bookingItemTypeId, $cats)) { continue; }
                $typeCount++;
            }
            
            foreach ($items as $item) {
                
                if ($item->bookingItemTypeId != $type->id && !$allInOne) {
                    continue;
                }
                
                if($allInOne && sizeof($cats) > 0 && !in_array($item->bookingItemTypeId, $cats)) {
                    continue;
                }
                
                $itemTimeLines = $timelines->itemTimeLines->{$item->id};
                $i = 1;
                
                
                $odd = $j % 2 ? "odd" : "even";
                echo "<div class='timeline_row $odd'>";
                    $prevBookingIds = array();
                    
                    foreach ($itemTimeLines as $time => $data) {
                        $header = "";
                        $colDate = date("D", $time/1000) . "<br>" . date("d.m", $time/1000);
                        $colDate2 = date("m/d/y", $time/1000);
                        $colTime = $time;
                        $isWeekend = (date('N', $time/1000) >= 6) ? "weekend" : "";
                        
                        if ($j == 0) {
                            $typeIds = $allInOne ? $cats : array($type->id);
                            $bookingCount = $this->getBookingCount($timelines, $time, $typeIds);
                            $leftOvers = $typeCount-$bookingCount;
                            $header = "<div class='header col_width $isWeekend'>$colDate  <span title='Number of rooms available / total rooms'>($leftOvers/$typeCount)</span></div>";
                        }
                        
                        $nextBookingIds = $this->getNextBookingIds($itemTimeLines, $time);
                        $inPrev = $this->anyMatches($data->bookingIds, $prevBookingIds) ? "connected_with_prev" : "";
                        $inNext = $this->anyMatches($data->bookingIds, $nextBookingIds) ? "connected_with_next" : "";
                        
                        $firstInRow = (!$inPrev && $inNext) || (!$inNext && !$inPrev)  ? "first_in_row" : "";
                        $lastInRow = ($inPrev && !$inNext) || (!$inNext && !$inPrev) ? "last_in_row" : "";
                        
                        $color = $data->state;
                        
                        if ($this->anyMatches($data->bookingIds, $data->virtuallyAssigned) && $data->state === "normal") {
                            $color = "grey";
                        }
                        
                        $containsBooking = count($data->bookingIds) ? "contains_booking" : "";
                        $bookingId = count($data->bookingIds) ? $data->bookingIds[0] : "";
                        
                        if (!$inPrev && $containsBooking) {
                            $header .= $this->createNameOfBooker($data);
                        }
                        
                        $firstInRowOuter = "";
                        if ($firstInRow && $containsBooking) {
                            $firstInRowOuter = $firstInRow."_outer";
                        }
                        
                        $lastInRowOuter = "";
                        if ($lastInRow && $containsBooking) {
                            $lastInRowOuter = $lastInRow."_outer";
                        }
                        
                        $noData = !$containsBooking ? "nodata" : "";
                        $canShowModal = $containsBooking && $data->state == "normal" ? "hasBookingYes"  : "";
                        $dragging = "";
                        $marking = "";
                        $dragging .= "ondragstart='app.PmsAvailability.onDragStart(event)' ondrop='app.PmsAvailability.onDragDrop(event)' ondragleave='app.PmsAvailability.onDragLeave(event)' ondragover='app.PmsAvailability.onDragOver(event)' onmousedown='app.PmsAvailability.startMarking(event)' onmouseup='app.PmsAvailability.endMarking(event)' onmouseover='app.PmsAvailability.markArea(event)'";
                        if($canShowModal) {
                            $dragging .= " draggable='true' ";
                        }
                        echo "<div typeid='$type->id' col='$i' bookingitemid='$item->id' date='$colDate2' row='$j' time='$time' class='col_outer $noData $firstInRowOuter $lastInRowOuter'>";
                        echo "<div $canShowModal bookingid='$bookingId' roomid='$data->roomId' $dragging class='$color timeline_col$i col col_width col_data $containsBooking $inPrev $inNext $firstInRow $lastInRow'>$header</div>";
                        echo "</div>";
                        $prevBookingIds = $data->bookingIds;
                        $i++;
                    }
                    $j++;
                echo "</div>";
            }
            ?>
        </div>
    </div>
<?
    if($allInOne) {
        break;
    }
}


$conferenceRooms = array();
foreach($items as $item) {
    if($item->bookingItemTypeId == "gsconference") {
        $conferenceRooms[] = $item;
    }
}
if(sizeof($conferenceRooms) > 0) {
    $filter = $this->getSelectedFilter();
    $toPrint = array();
    foreach($conferenceRooms as $confRoom) {
        $start = $this->convertToJavaDate(strtotime($filter->start));
        $end = $this->convertToJavaDate(strtotime($filter->end));
        $reservations = $this->getApi()->getBookingEngine()->getAllBookingsByBookingItemInDateRange($this->getSelectedMultilevelDomainName(), 
                $confRoom->id, $start, $end);
        foreach((array)$reservations as $reservation) {
            $entry = new ns_e8fedc44_b227_400b_8f4d_52d52e58ecfe\DayViewCalendarEntry();
            $entry->start = strtotime($reservation->startDate);
            $entry->end = strtotime($reservation->endDate);
            $entry->roomId = $confRoom->id;
            $entry->id = $reservation->id;
            $entry->type = "reservation";
            $toPrint[] = $entry;
        }
    }
    
    echo "<h3>Conference room overview</h3>";
    
    $app = new \ns_e8fedc44_b227_400b_8f4d_52d52e58ecfe\DayViewCalendar();
    $app->setNumberOfRooms(sizeof($conferenceRooms));
    $app->setDateRange($filter->start, $filter->end);
    $app->setEvents($toPrint);
    foreach($conferenceRooms as $confRoom) {
        $color = $app->getColorForRoomId($confRoom->id);
        if(!$color) {
            echo "<span class='availabilitylabel' style='color:#aaa;'> " . $confRoom->bookingItemName . " (not in use)</span>";
        } else {
            echo "<span class='availabilitylabel' style='color:$color;'> " . $confRoom->bookingItemName . "</span>";
        }
    }
    $app->render();
}


$jsonLines = json_encode($timelines->overFlowLines);
echo "<script>";
echo "var overflowAvailabilityLines = ".$jsonLines;
echo "</script>";

?>
<script>
$(document).ready(function() {
    
    var count = $('.timeline_row:first').find('.header').size();
    var width = $(this).find('.timeline_item_name').outerWidth() + 5;
    $(this).find('.timeline').css('width', 'calc(100% - ' + width + "px)");
    width = $(this).find('.timeline').width();
    var size = width/count;
    
    if (size < 64) {
        size = 64;
    }
    
    $(".col_outer").outerWidth(size);
    
    $('.bookername').each(function() {
        var col = $(this).closest('.col_outer').find('.col_data');
        var bookingid = col.attr('bookingid');
        var numberOfBlocks = $('.col_data[bookingid="'+bookingid+'"]').size();
        var marginLeft = size * numberOfBlocks;
        marginLeft -= size;
        $(this).css('margin-right', "-"+marginLeft+"px");
        $(this).find('span').hide();
        $(this).attr('numberofblocks', numberOfBlocks);
        $(this).find('.fullname').fadeIn();
    });
    if (typeof(alreadyAddedScrollAvailability) === "undefined") {
        alreadyAddedScrollAvailability = true;
        document.addEventListener('scroll', function (event) {
            var line = $(event.target);
            if($(event.target).hasClass('timeline')) {
                $('.timeline').scrollLeft(line.scrollLeft());
            }
        }, true /*Capture event*/);
    }
    
    
    for (var i in overflowAvailabilityLines) {
        var row = overflowAvailabilityLines[i];
        for (var j in row) {
            var data = row[j];
            if (data.count < 1) {
                continue;
            }
            
            var toUse = $('.type_line[typeid="'+data.typeId+'"] .col_outer.nodata[time="'+data.time+'"]');
            
            if (toUse.size() < 1) {
                if( document.getElementById("errorContainer").innerHTML == '' ) document.getElementById("errorContainer").innerHTML = '<h1 style="color:#ff0000;">There are bookings that we are not able to show you because you dont have enough rooms</h1><div id="faultyRooms"></div>';
                console.log('Overbookingalert!',data)
                document.getElementById("faultyRooms").innerHTML += '<p method="loadBooking" gs_show_overlay="booking_room_view" bookingid="'+ data.bookingIds[0] +'" roomid="'+ data.roomId +'">Booker: '+ data.name +'; Date: '+ (new Date( data.time ).toLocaleDateString()) +'</p>';
                continue;
            }
            
            toUse = $(toUse[0]);
           
            var toUseInner = toUse.find('div.col');
            toUseInner.addClass('contains_booking');
            toUseInner.addClass('reservedfloating');
            toUseInner.attr('bookingid', data.bookingIds[0]);
            toUseInner.attr('roomId', data.roomId);
            toUse.removeClass('nodata');
            toUse.addClass('col_data');
            
            var words, acronym, nextWord;

            var s = data.name;
            words = s.split(' ');
            acronym= "";
            index = 0
            while (index<words.length) {
                nextWord = words[index];
                acronym = acronym + nextWord.charAt(0);
                index = index + 1 ;
            }
            
            toUseInner.append("<div class='bookername'><span class='fullname'></span><span class='acronyme' style='display:block;'>"+acronym+"</span></div>");
        }
    }
    
});
</script>