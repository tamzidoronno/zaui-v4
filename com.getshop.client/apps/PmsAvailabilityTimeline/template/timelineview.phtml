<?php
$interval = array();
$interval[60] = "60 minutes";
$interval[60*60] = "1 hour";
$interval[60*60*24] = "1 day";
$interval[60*60*24*7] = "7 days";
$interval[60*60*24*31] = "31 days";
$interval[60*60*24*365] = "365 days";
$types = $this->getApi()->getBookingEngine()->getBookingItemTypes($this->getSelectedName());
foreach($types as $type) {
    $types[$type->id] = $type;
}
$items = $this->indexList($this->getApi()->getBookingEngine()->getBookingItems($this->getSelectedName()));
$types = $this->indexList($this->getApi()->getBookingEngine()->getBookingItemTypes($this->getSelectedName()));
$additional = $this->getApi()->getPmsManager()->getAllAdditionalInformationOnRooms($this->getSelectedName());
foreach($additional as $add) {
    $additional[$add->itemId] = $add;
}

$viewtype = array();
$viewtype['types'] = "Types";
$viewtype['items'] = "Rooms";

$printTypeOverview = $this->printTypes();


/* @var $this ns_176ea989_c7bb_4cef_a4bd_0c8421567e0b\PmsAvailabilityTimeline */
$start = date("d.m.Y", $this->getStart());
$end = date("d.m.Y", $this->getEnd());
$selectedInterval = $this->getInterval();
$compact = $this->getCompactView();
$compactChecked = "";
if($compact) {
    $compactChecked = "CHECKED";
}
$roomsInWorkSpace = (array)$this->getApi()->getPmsManager()->getWorkSpaceRooms($this->getSelectedName());

?>

<div gstype="form" method="showTimeLine">
    <input type='checkbox' gsname='compactmode' <?php echo $compactChecked; ?>> Compact view<br>
    <input type="text" gsname='start' value='<? echo $start; ?>'>
    <input type="text" gsname='end' value='<? echo $end; ?>'> 
    <?php
    
    $filters = $this->getApi()->getPmsManager()->getAllPmsFilters($this->getSelectedName());
    $found = false;
    foreach($filters as $filter) {
        if($filter->filterName == "coverage") { continue; }
        $found = true;
    }
    if($found) {
        echo "<select gsname='filtertouse'>";
        echo "<option value=''>All</option>";
        foreach($filters as $filter) {
            if($filter->filterName == "coverage") {
                continue;
            }
            $selected = $this->getSelectedDefinedFilter() == $filter->filterName ? "SELECTED" : "";
            echo "<option value='".$filter->filterName."' $selected>".$filter->filterName."</option>";
        }
        echo "</select>";
    }

    ?>
    <input gstype="submit" type="button" value="<? echo $this->__w("Show"); ?>">
    <input type='button' class='closeRoomOptionsButton ' value="Close a room" style='float:right;'> 
<!--    <input type='button' class='reserveRoomButton ' value="Reserve room(s)" style='float:right;'> -->
</div>
<br>
<input type='hidden' value='<?php echo $this->getConfigurationSetting("pmsmanagerinstanceid"); ?>' id='bookinginstanceid'>
<div class='timelineresult'>
    <?php
    $filter = new core_pmsmanager_PmsIntervalFilter();
    $filter->start = $this->convertToJavaDate($this->getStart());
    $filter->end = $this->convertToJavaDate($this->getEnd());
    $filter->interval = $this->getInterval();
    $filter->selectedDefinedFilter = $this->getSelectedDefinedFilter();
    
    $result = $this->getApi()->getPmsManager()->getIntervalAvailability($this->getSelectedName(), $filter);

    $numberOfDays = 0;
    foreach($result->typeTimeLines as $type => $lines) {
        foreach($lines as $line) {
            $numberOfDays++;
        }
        break;
    }
    
    $freecount = 0;
    $totalRooms = 0;
    foreach($result->itemTimeLines as $itemId => $days) {
        $taken = false;
        foreach($days as $time => $value) {
            if($value->count != 0) {
                $taken = true;
            }
        }
        $totalRooms++;
        if(!$taken) {
            $freecount++;
        }
    }
    $taken = ($totalRooms-$freecount);
    echo "Rooms free: " . $freecount . " of " . $totalRooms . " in total giving " . $taken .  " rooms taken.<bR><bR>";
    
    echo "<div class='timelineoverviewouter roomoverview'>";
    echo "<div class='timelineoverview'>";
    echo "<table cellspacing='1'>";
    
    $printHeading = true;
    foreach($result->typeTimeLines as $type => $lines) {
        if($printHeading) {
            echo "<tr>";
            echo "<th style='width:150px;'></th>";
            foreach($lines as $line) {
                echo "<th style='width: 65px;'>" . date("d.m.y", strtotime($line->start)) . "</th>";
            }
            echo "</tr>";
            $printHeading= false;
        }
        /* @var $line core_bookingengine_data_BookingTimeLine */
        echo "<tr>";
        echo "<td class='fixedscroll'><span class=' room_desc '>" . $types[$type]->name .  "</span></td>";
        foreach($lines as $day => $line) {
            $full = "available";
            if($lines[0]->totalAvailableSpots == $line->count) {
                $full = "full";
            }
            $title = $line->count . " of " . $lines[0]->totalAvailableSpots . " taken";
            echo "<td align='center' type='$type' day='".$line->start."' title='$title' class='$full loadBookingList'>" . $line->count . "/" . $line->totalAvailableSpots . "</td>";
        }
        echo "</tr>";
    }
    echo "</table>";
    echo "</div>";
    echo "</div>";
    echo "<div id='toggleRoomoverview'><i class='fa fa-fw fa-angle-double-up'></i></div>";
    echo "<bR><bR>";

    if(sizeof($roomsInWorkSpace) > 0) {
        
        echo "<br><br><br>";
        echo "<span class='changeroomfromworkspacebox' style='display:none; position:absolute;background-color:#fff; border: solid 1px; padding: 10px;' ></span>";
        echo "<div style='border: solid 1px; '>";
        echo "<div style='border-bottom: 2px;text-align:center; padding: 10px; color:#fff; background-color:red;'><i class='fa fa-warning'></i> Hey there, you got rooms added to your workspace.</b><br>";
        echo "Availability for dates where rooms are in the workspace has been closed off.";
        echo "</div>";
        echo "<div style='padding: 10px;'>";
        echo "<table cellspacing='0' cellpadding='0'>";
        echo "<tr>";
        echo "<th>Booker</th>";
        echo "<th>Guest</th>";
        echo "<th>Roomtype</th>";
        echo "<th>Start</th>";
        echo "<th>End</th>";
        echo "<th>Action</th>";
        echo "</tr>";
        
        foreach($roomsInWorkSpace as $room) {
            /* @var $room core_pmsmanager_PmsBookingRooms */
            $booking = $this->getApi()->getPmsManager()->getBookingFromRoom($this->getSelectedName(), $room->pmsBookingRoomId);
            $user = $this->getApi()->getUserManager()->getUserById($booking->userId);
            echo "<tr>";
            echo "<td style='padding: 5px;'>" . $user->fullName . "</td>";
            echo "<td style='padding: 5px;'>" . $room->guests[0]->name . "</td>";
            echo "<td style='padding: 5px;'>" . $this->getApi()->getBookingEngine()->getBookingItemType($this->getSelectedName(), $room->bookingItemTypeId)->name . "</td>";
            echo "<td style='padding: 5px;'>" . date("d.m.Y H:i", strtotime($room->date->start)) . "</td>";
            echo "<td style='padding: 5px;'>" . date("d.m.Y H:i", strtotime($room->date->end)) . "</td>";
            echo "<td style='padding: 5px; color:blue; cursor:pointer;' class='readdfromworkspace' roomid='".$room->pmsBookingRoomId."' bid='".$booking->id."'>Open</td>";
            echo "</tr>";
        }
        echo "</table>";
        echo "</div>";
        echo "</div>";
        echo "<br><br><br>";
    }

    $printHeader = true;
    $detailed = "";
    if(!$this->getCompactView()) {
        $detailed = "detailedview";
    }
    echo "<div class='timelineoverviewouter $detailed'>";
    echo "<div class='timelineoverview'style='min-height:700px;padding-bottom:100px;'>";
    echo "<div class='topspacingitemoverview'></div>";
    foreach($result->itemTimeLines as $itemId => $days) {
        $lastid = "";
        $toggle = true;
        if($printHeader) {
            echo "<div class='dateheadingrow'>";
            echo "<span class='valueentry_placeholder'>&nbsp;</span>";
            foreach($days as $time => $value) {
                echo "<span class='valueentry date'>" . date("d.m.y", $time/1000) . "</span>";
            }
            echo "</div>";
            echo "<div style='clear:both;'></div>";
            $printHeader = false;
        }

        $text = $items[$itemId]->bookingItemName . " ". $types[$items[$itemId]->bookingItemTypeId]->name . " " . $items[$itemId]->description;
        $isClean = "";
        if($additional[$itemId]->isCleanNotToday) {
            $isClean = "isClean";
            $text = trim($text). ", room is clean";
        }
        if($compact) {
            $text = $items[$itemId]->bookingItemName;
        }
        
        echo "<span class='valueentry_item fixedscroll2'><span class='room_desc' title='$text'><i class='fa fa-paint-brush $isClean'></i> " . $text . "</span></span>";
        echo "<span class='valueentry_placeholder'>&nbsp;</span>";
        $printed = false;
        $free = "available";
        foreach($days as $time => $value) {
            $doPrint = true;
            $isTaken = true;
            $id = "";
            if($value->count == 0) {
                $doPrint = false;
                $free = "available";
                $isTaken = false;
            } else {
                $id = $value->bookingIds[0];
            }
            $name = "";
            $toggled = false;
            if($id != $lastid) {
                if($lastid)
                $toggle = !$toggle;
                $lastid = $id;
                if($isTaken) {
                    $toggled = true;
                    $printed = false;
                }
            }
            
            if(!$printed) {
                $name = $this->makeInitials($value->name);
                $name = htmlentities($name);
                if($isTaken) {
                    if($toggle) {
                        $free = "full";
                    } else {
                        $free = "full full_second";
                    }
                }
            }
            
            if($value->name == "cleaning") {
                $free = "needcleaning";
                if($name)
                    $name = $this->createDeleteBookingIcon($id);
            }
            if($value->name == "closed" || stristr($value->name, "closed: ") || stristr($value->name, "closed by: ")) {
                $free = "closedroom";
                if(!$printed) {
                    $name = $this->createDeleteBookingIcon($id);
                }
            }
            
            $type = $free;
            
            if ($this->isVirtuallyAssigned($id, $value)) {
                $free = "virtually_added full";
                $type = "virtually_added";
            }
            
            
            echo "<span class='valueentry $free' time='$time' itemid='".$itemId."' bid='$id' type='$type'>&nbsp;&nbsp;$name</span>";
            if($isTaken) {
                $printed = true;
            }
        }
        echo "<div style='clear:both;'></div>";
    }
    echo "</div>";
    echo "</div>";
    ?>
</div>

<div style="border: solid 1px red; padding: 20px; margin-top: 20px;">
    <i class="fa fa-info"></i> Grey boxes are just a forcast on how the system thinks the assigning should be with the current coverage. If more bookings added or manually assigning is being made this will change at any time.
</div>

<script>
    $('.PmsAvailabilityTimeline .timelineoverview').width('<? echo ($numberOfDays*80)+200; ?>px');
    $('.PmsAvailabilityTimeline .dateheadingrow').width('<? echo ($numberOfDays*80)+200; ?>px');
    $('.PmsAvailabilityTimeline .dateheadingrow').css('position','absolute');
    $('.PmsAvailabilityTimeline .dateheadingrow').css('top','0px');
    $('.PmsAvailabilityTimeline .dateheadingrow').css('z-index','1');
    $('input[gsname="start"]').datepicker({ dateFormat: "dd.mm.yy", changeMonth: true, changeYear: true, showButtonPanel: true,
        onSelect: function(dateText) {
               var date = moment(dateText, "DD.MM.YYYY");
               var month = (moment(date).get('month')+1);
               if(month < 10) {
                   month = "0" + month;
               }
               var currentEnd = $('input[gsname="end"]').val();
               var endMoment = moment(currentEnd, "DD.MM.YYYY");

               var diff = endMoment.diff(date, "minutes");
               if(diff < 0 || currentEnd == 0) {
                   var day = moment(date).get('date')+7;
                   if(day < 10) {
                       day = "0" + day;
                   }
                   $('input[gsname="end"]').val(day + "." + month + "." + moment(date).get('year'));
               }
             }
         });
    $('input[gsname="end"]').datepicker({ dateFormat: "dd.mm.yy", changeMonth: true, changeYear: true, showButtonPanel: true,
    onSelect: function(dateText){
        var date = moment(dateText, "DD.MM.YYYY");
           var month = (moment(date).get('month')+1);
           if(month < 10) {
               month = "0" + month;
           }
           var currentStart = $('input[gsname="start"]').val();
           var startMoment = moment(currentStart, "DD.MM.YYYY");

           var diff = startMoment.diff(date, "minutes");
           if(diff > 0 ||currentStart == 0) {
               var day = moment(date).get('date')-7;
               if(day < 10) {
                   day = "0" + day;
               }
               $('input[gsname="start"]').val(day + "." + month + "." + moment(date).get('year'));
           }
         }
    });
    <?php if(!$printTypeOverview) { ?>
        $('select[gsname="viewtype"]').val('items');
    <?php } ?>
        $('.timelineoverviewouter.detailedview').scroll(function() {
            var left = $(this).scrollLeft();
            $('.fixedscroll2').css('left',left+"px");
            $('.PmsAvailabilityTimeline .dateheadingrow').css('top',$(this).scrollTop());
        });
        $('.timelineoverviewouter.roomoverview').scroll(function() {
            var left = $(this).scrollLeft();
            $('.fixedscroll').css('left',left+"px");
        });
        var state = localStorage.getItem('PmsRoomoverviewState');
        if(state === "hidden"){
            $('.roomoverview').hide();
            $('#toggleRoomoverview').addClass('flip');
        }else{
            $('.roomoverview').show();
            $('#toggleRoomoverview').removeClass('flip');
        }
</script>
