<?
/* @var $this ns_2e51d163_8ed2_4c9a_a420_02c47b1f7d67\PmsCheckout */
$originalCart = $this->getOriginalCartFromSession();
$currentCart = $this->getCurrentCart();
$total = $this->getApi()->getCartManager()->getCartTotal($currentCart);
$items = (array)$originalCart->items;

$groupedByExternalId = array();
foreach($items as $item) {
    if(!isset($groupedByExternalId[$item->product->externalReferenceId])) {
        $groupedByExternalId[$item->product->externalReferenceId] = array();
    }
    $groupedByExternalId[$item->product->externalReferenceId][] = $item;
}

$roomIds = array();
foreach($currentCart->items as $item) {
    $roomIds[$item->product->externalReferenceId] = "1";
}

$i = 0;

if (!count($items)) {
    ?>
    <div class="kaipal infobox">
        <div class="image happy"></div>
        <div class="textbox">
            <div class="header"><? echo $this->__f("Everything has been handled"); ?></div>
            <div class="text">
                <?
                echo $this->__f("You can not create more orders, please edit the amount for the booking or remove an existing order.");
                ?>

                <div class="buttonarea">
                    <div class="buttonareaheader"><? echo $this->__f("Do you want me to do something else?"); ?></div>
                    <div class="shop_button" onclick='$(".checkoutview").hide();$(".getshoptableoverlaybody").css("height","auto");'><? echo $this->__f("Close payment process"); ?></div>
                </div>

            </div>
        </div>
    </div>
    <?php
    return;
}
$this->loadCartFilter();
foreach($groupedByExternalId as $roomId => $items) {

    $booking = $this->getApi()->getPmsManager()->getBookingFromRoom($this->getSelectedMultilevelDomainName(), $roomId);
    $room = "";
    foreach($booking->rooms as $r) {
        if($r->pmsBookingRoomId == $roomId) {
            $room = $r;
        }
    }
    
    if($room->bookingItemId) {
        $item = $this->getApi()->getBookingEngine()->getBookingItem($this->getSelectedMultilevelDomainName(), $room->bookingItemId);
        echo "room: " . $item->bookingItemName. " ";
    }
    if($room->bookingItemTypeId) {
        $item = $this->getApi()->getBookingEngine()->getBookingItemType($this->getSelectedMultilevelDomainName(), $room->bookingItemTypeId);
        echo "type: " . $item->name . " ";
    }
    echo " ";
    echo date("d.m.Y H:i", strtotime($r->date->start));
    echo " - ";
    echo date("d.m.Y H:i", strtotime($r->date->end)) . " ";
    $guestNames = array();
    foreach($room->guests as $guest) {
        $guestNames[] = $guest->name;
    }
    $guests = join(",", (array)$guestNames);
    echo "<span style='float:right;'>" . $guests . "</span>";
    
    echo "<div class='itemsarea'>";
    foreach ($items as $item) {
        $i++;
        $lastItem = count($items) == $i ? "last_row" : "";
        $this->setCurrentItem($item);

        echo '<div class="cartitem row '.$lastItem.'" cartItemId="'.$item->cartItemId.'">';

        if ($item->addedByGetShopModule == "pms") {
            if (isset($item->priceMatrix) && $item->priceMatrix && count($item->priceMatrix)) {
                $this->includefile("pmswithmatrixitem");
            } else if(isset($item->itemsAdded) && $item->itemsAdded && count($item->itemsAdded)) {
                $this->includefile("pmsaddons");
            } else {
                $this->includefile("pmsnormalcartitem");
            }
        } 

        echo "</div>";
    }
    echo "</div>";
    echo "<div style='clear:both;'></div>";
    echo "<br>";
}
?>

<div class='summary'>
    <? echo $this->__f("Total"); ?>: <span><? echo round($total); ?></span>
</div>

<?

if ($this->isReadOnly()) {
    return;
}


$paymentApps = $this->getApi()->getStoreApplicationPool()->getActivatedPaymentApplications();
?>
<div gstype='form' method='createOrder'>
    <div class="payment_options payment_window">
        <div class="options">
            <select class='gsniceselect1 appendtoorderselection' gsname='appendtoorder'>
                <option value="">Create a new order</option>
                <?
                //Need to find orders that has been created on the bookings and display them here!
                $orderIds = array();
                foreach($roomIds as $roomId => $id) {
                    $booking = $this->getApi()->getPmsManager()->getBookingFromRoom($this->getSelectedMultilevelDomainName(), $roomId);
                    foreach($booking->orderIds as $orderId) {
                        if(!in_array($orderId, $orderIds)) {
                            $orderIds[] = $orderId;
                        }
                    }
                }
                foreach($orderIds as $orderId) {
                    $order = $this->getApi()->getOrderManager()->getOrder($orderId);
                    if(!$this->isGroupPayment() && !$order->closed && !$order->manuallyClosed) {
                        echo "<option value='$orderId'>Add to order: " . $order->incrementOrderId . "</option>";
                    }
                }
                ?>
            </select>
        </div>
    </div>

    <div class="payment_options payment_window">
        <div class="options">
            <?php
            $ecom = $this->getApi()->getStoreApplicationPool()->getApplication("9de54ce1-f7a0-4729-b128-b062dc70dcce");
            $ecomsettings = $this->getFactory()->getApplicationPool()->createInstace($ecom);
            ?>
            <select class='gsniceselect1 paymentmethodselection' gsname='payment'>
                <?
                foreach ($paymentApps as $app) {
                    $appInstance = $this->getFactory()->getApplicationPool()->createInstace($app);
                    $selected = $ecomsettings->getConfigurationSetting("defaultPaymentMethod") == $app->id ? "SELECTED" : "";
                    $name = $appInstance->getName();
                    if($name == "InvoicePayment") {
                        $name = "Invoice";
                    }
                    echo "<option value='".$app->id."' $selected>" . $name . " ". "</option>";
                }
                if($total > 0) {
                    $userIds = array();
                    foreach($roomIds as $roomId => $id) {
                        $booking = $this->getApi()->getPmsManager()->getBookingFromRoom($this->getSelectedMultilevelDomainName(), $roomId);
                        if(in_array($booking->userId, $userIds)) {
                            continue;
                        }
                        echo "<option value=''>". $booking->userId . "</option>";
                        $user = $this->getApi()->getUserManager()->getUserById($booking->userId);
                        foreach($user->savedCards as $card) {
                            echo "<option value='savedcard_".$card->id."' SELECTED>Saved card (" . $card->savedByVendor  . ") : " . $card->mask . "(" . $card->expireMonth . " / " . $card->expireYear . ")" . "</option>";
                        }
                        $userIds[] = $user->id;
                    }
                }                    
                ?>
            </select>
        </div>
    </div>
    <?php
    $options = array();
    if($this->isGroupPayment()) {
        $options['merged'] = "Create one MERGED order for all rooms.";
    } else {
        $options['all'] = "Create one order for all rooms";
    }
    $options['uniqueorder'] = "Every guest pay themself";
    $options['uniqueordersendpaymentlink'] = "Every guest pay themself and send payment link to guests";


    ?>
    <div class="payment_options payment_window">
        <div class="options">
            <select class='gsniceselect1' style='width:100%;' gsname='paymenttypeselection'>
                <?php
                foreach($options as $key => $val) {
                    $selected = "";
                    if($key == $_SESSION['groupordercreationtype']) {
                        $selected = "SELECTED";
                    }
                    echo "<option value='$key' $selected>$val</option>";
                }
                ?>
            </select>
        </div>
    </div>
    <?php
    if($this->isGroupPayment()) {
        $groups = $this->getBookingGroup();
        $usersIds = array();
        foreach($groups as $tmpBookingId) {
            $booking = $this->getApi()->getPmsManager()->getBooking($this->getSelectedMultilevelDomainName(), $tmpBookingId);
            $usersIds[$booking->userId] = 1;
        }
        $usersIds = array_unique(array_keys($usersIds));
        ?>
        <br>Connect this order to the following user:
        <div class="payment_options payment_window">
            <div class="options">
                <select class='gsniceselect1' style='width:100%;' gsname='userid'>
                    <?php
                    foreach($usersIds as $usrid) {
                        $usr = $this->getApi()->getUserManager()->getUserById($usrid);
                        echo "<option value='".$usr->id."'>".$usr->fullName."</option>";
                    }
                    ?>
                </select>
            </div>
        </div>
        <?php
    }
    
    if ($this->getApi()->getCartManager()->isCartConflictingWithClosedPeriode()) {
        ?>
        <br/>
        <b style="color: red;"> The periode is closed, do accounting on the following day instead: </b>
        <br/> <input class="gsniceinput1 overridedate" gsname="overridedate" value="<? echo date('m/d/Y', strtotime($this->getApi()->getOrderManager()->getOrderManagerSettings()->closedTilPeriode)); ?> "/>
        <br/>
        <br/>
        
        <script>
            $('.PmsCheckout .overridedate').datepicker();
        </script>
        <?
        echo "";
    }
    
    ?>
    <span class="shop_button continue_checkout" gstype='submit' gs_callback='app.PmsCheckout.orderCreationCompleted'>Create payment</span>
</div>

