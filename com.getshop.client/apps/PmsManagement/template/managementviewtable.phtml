<?php
/* @var $this ns_7e828cd0_8b44_4125_ae4f_f61983b01e0a\PmsManagement */
$filter = $this->getSelectedFilter();
$bookings = $this->getApi()->getPmsManager()->getAllBookings($this->getSelectedName(), $filter);
$types = $this->getApi()->getBookingEngine()->getBookingItemTypes($this->getSelectedName());
$items = $this->getApi()->getBookingEngine()->getBookingItems($this->getSelectedName());
$prices = $this->getApi()->getPmsManager()->getPrices($this->getSelectedName(), $this->convertToJavaDate(time()), $this->convertToJavaDate(time()));
$config = $this->getApi()->getPmsManager()->getConfiguration($this->getSelectedName());

$hasPrices = false;

if($config->requirePayments) {
    $hasPrices = true;
}
foreach($items as $item) {
    $items[$item->id] = $item;
}
$types2 = array();
foreach($types as $type) {
    $types2[$type->id] = $type;
}
$types = $types2;

$rows = 0;
$headers = array();
$headers['regdate'] = "Reg";
$headers['periode'] = "Periode";
$headers['visitor'] = "Visitor";
$headers['room'] = "Room";
$headers['price'] = "Price";
$headers['state'] = "State";
if(!isset($filter->sorting)) {
    $filter->sorting = "regdate";
}
$prices = array();
$prices[1] = "daily";
$prices[2] = "monthly";
$prices[3] = "weekly";
$prices[4] = "minutly";
$prices[5] = "hourly";
$prices[6] = "secondly";
$prices[7] = "daily";
$prices[8] = "daily";


if(!isset($filter->typeFilter)) {
    $filter->typeFilter = array();
}

foreach($types as $id => $type) {
    echo "<span class='typefilter'>";
    $checked = "";
    if(in_array($id, $filter->typeFilter)) {
        $checked = "CHECKED";
    }
    echo "<input type='checkbox' gstype='clicksubmitforce' method='addTypeFilter' gsname='id' gsvalue='$id' $checked>";
    echo $type->name . "</span>";
}
$checked = "";
$incDeleted = "";
if($this->isGroupedByBooking()) {
    $checked = "CHECKED";
}
if($this->isIncludeDeleted()) {
    $incDeleted = "CHECKED";
}
echo "<input type='checkbox' gstype='clicksubmitforce' method='groupByBooking' gsname='id' gsvalue='' $checked> Group by booking ";
echo "<input type='checkbox' gstype='clicksubmitforce' method='includeDeleted' gsname='incdelete' $incDeleted class='clicksubmitcheckbox'> Include deleted";
echo "<br>";
echo "<br>";

echo "<table width='100%' cellspacing='0' cellpadding='0'>";
echo "<tr>";
echo "<th></th>";
foreach($headers as $header => $value) {
    if($header == "price" && !$hasPrices) {
        continue;
    }
    echo "<th gstype='clicksubmit' gsvalue='$header' method='sortTable' gsname='column' style='cursor:pointer;'>";
    if($filter->sorting == $header) {
        echo "<i class='fa fa-arrow-down'></i>";
    } else if($filter->sorting == $header . "_desc") {
        echo "<i class='fa fa-arrow-up'></i>";
    }
    echo $value;
    echo "</th>";
}
echo "</tr>";
if(!$bookings) {
    $bookings = array();
}

$tableRows = array();
$i = 0;
$sortList = array();
foreach($bookings as $booking) {
    $comments = "";
    foreach($booking->comments as $time => $val) {
        $comments .= $val->comment . "<br>";
    }
    
    if(!$booking->rooms || sizeof($booking->rooms) == 0) {
        $booking->rooms = array();
        $room = new core_pmsmanager_Room();
        $room->pmsBookingRoomId = "";
        $room->bookingItemTypeId = "";
        $booking->rooms[] = $room;
        $room->keyIsReturned = false;
        $room->guests = array();
        $guest = new core_pmsmanager_PmsGuests();
        $guest->name = "Empty booking";
        $room->guests[] = $guest;
    }
    
    foreach($booking->rooms as $room) {
        if(!$this->isActive($room, $filter, $booking)) {
            continue;
        }
         
        $row = "";
        $rows++;
        if(isset($types[$room->bookingItemTypeId]) && $types[$room->bookingItemTypeId]->addon > 0) {
            continue;
        }
        
        $row .= "<tr>";
        $row .= "<td style='width:70px;'>";
        $row .= "<i class='fa fa-info moreinformationaboutbooking actions' roomid='".$room->pmsBookingRoomId."' bookingid='".$booking->id."'></i> ";
        $row .= "</td>";
        $row .= "<td style='width: 100px;'>";
        $row .= date("d.m.Y H:i", strtotime($booking->rowCreatedDate));
        $row .= "</td>";

        $row .= "<td style='width:170px;'>";
        if(isset($room->date) && $room->date->start) {
            $row .= date("d.m.Y H:i", strtotime($room->date->start));
        }
        if(isset($room->date) && $room->date->end) {
            //Dont show end date if this is a atleast 75 years booking
            if(((strtotime($room->date->end) - strtotime($room->date->start)) /86400) < 20000) {
                if(date("dmy", strtotime($room->date->end)) !=  date("dmy", strtotime($room->date->start))) {
                    $row .= "<br>";
                    $row .= date("d.m.Y H:i", strtotime($room->date->end));
                } else {
                    $row .= " - " . date("H:i", strtotime($room->date->end));
                }
            }
        }
        $row .= "</td>";
        $row .= "<td>";
        
        foreach($booking->registrationData->resultAdded as $key => $val) {
            if($key == "title") {
                $row .= "<div>$val</div>";
            }
        }
        
        if(trim($comments)) {
            $row .= "<i class='fa fa-comment' title='$comments'></i> ";
        }
        if($this->hasAddon($room, 1)) {
            $row .= "<i class='fa fa-cutlery' title='Breakfast included'></i> ";
        }
        if($this->hasAddon($room, 2)) {
            $row .= "<i class='fa fa-car' title='Parking spot'></i> ";
        }
        if($this->hasAddon($room, 5)) {
            $row .= "<i class='fa fa-bed' title='Extra bed'></i> ";
        }
        
        foreach($booking->rooms as $room2) {
            $addons = array();
            if(isset($types[$room2->bookingItemTypeId])) {
                if($types[$room2->bookingItemTypeId]->addon > 0) {
                    $addons[] = $types[$room2->bookingItemTypeId]->name;
                }
            }
            if($addons) {
//                $row .= "<i class='fa fa-plus-circle' title='".  join(",", $addons)."'></i> ";
            }
        }
        foreach($room->guests as $guest) {
            $row .= $guest->name . " - " . $guest->email . " - " . $guest->phone . "<br>";
        }
        $user = $this->getApi()->getUserManager()->getUserById($booking->userId);
        $row .= "<div style='padding-top: 5px;'>";
        if($user) {
            $row .= "<span class='secondary_text'>By " . $user->fullName . "</span>";
        }
        $row .= "</div>";

        if($this->isGroupedByBooking() && sizeof($booking->rooms) > 1) {
            $row .= "+" . (sizeof($booking->rooms)-1) . " additional room(s)";
        }


        $row .= "</td>";
        $row .= "<td>";
        if($room->keyIsReturned) {
            $row .= "<i class='fa fa-key' title='Key has been returned' style='color:green;'></i> ";
        }
        if(isset($room->booking) && $room->booking && $room->booking->bookingItemId) {
            $row .= $items[$room->booking->bookingItemId]->bookingItemName;
        }
        if(isset($types[$room->bookingItemTypeId])) {
            $row .= "<br><span class='secondary_text'>" . $types[$room->bookingItemTypeId]->name . "</span>";
        }

        $row .= "</td>";
        if($hasPrices) {
            $row .= "<td>";
            $row .= $room->price . " " .  "<br><span class='secondary_text'>".$prices[$booking->priceType]."</span>";
            $row .= "</td>";
        }

        $state = "";
        if($booking->unConfirmed) {
            $state = "Rejected";
        } else if($booking->isDeleted) {
            $state = "Deleted";
        } else if($booking->confirmed) {
            $state = "Confirmed";
        } else if(!$booking->confirmed) {
            $state = "Unconfirmed";
        }
        if($hasPrices && !$booking->payedFor) {
            $state = "Unpaid";
        }
        
        
        $row .= "<td align='center' class='$state'>$state";
        
        if($booking->avoidAutoDelete) {
            $row .= "<br>No autodelete";
        }
        if($hasPrices && $booking->payedFor && $booking->needCapture) {
            $row .= "<br><span title='This transaction has not yet been captured by the card vendor, this should be completed within a couple of minutes.'>(need capture)</span>";
        }
        
        
        $row .= "</td>";
        $row .= "</tr>";
        
        $index = $i;

        if($this->containsSearchWord($row,$filter)) {
            if($filter->sorting == "room" || $filter->sorting == "room_desc") {
                $sortList[$i] = $items[$room->booking->bookingItemId]->bookingItemName;
            } else if($filter->sorting == "periode" || $filter->sorting == "periode_desc") {
                $sortList[$i] = strtotime($room->date->start);
            } else if($filter->sorting == "visitor" || $filter->sorting == "visitor_desc") {
                if(sizeof($room->guests) == 0 && $user) {
                    $sortList[$i] = $user->fullName;
                } else {
                    $sortList[$i] = $room->guests[0]->name;
                }
            } else if($filter->sorting == "date" || $filter->sorting == "date_desc") {
                $sortList[$i] = strtotime($booking->rowCreatedDate);
            } else if($filter->sorting == "price" || $filter->sorting == "price_desc") {
                $sortList[$i] = $room->price;
            } else if($filter->sorting == "state" || $filter->sorting == "state_desc") {
                $sortList[$i] = $state;
            } else {
                $sortList[$i] = $i;
            }
        
            $tableRows[$index] = $row;
            $i++;
        }
        
        
        
        if($this->isGroupedByBooking()) {
            break;
        }
    }
}

if(stristr($filter->sorting, "_desc")) {
    arsort($sortList);
} else {
    asort($sortList);
}

foreach($sortList as $idx => $value) {
    echo $tableRows[$idx];
}

echo "</table>";
echo "<br>";
echo sizeof($sortList) . " rows in total.";
?>