package com.getshop.javaapi;

import com.google.gson.GsonBuilder;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.LinkedHashMap;
import com.thundashop.core.common.JsonObject2;
public class APIArxManager {

      public Transporter transport;

      public APIArxManager(Transporter transport){
           this.transport = transport;
      }

     /**
     * communication with the arx server.
     *
     * @author boggi
     */
     public void doorAction(java.lang.String externalId, java.lang.String state)  throws Exception  {
          JsonObject2 gs_json_object_data = new JsonObject2();
          gs_json_object_data.args = new LinkedHashMap();
          gs_json_object_data.args.put("externalId",new Gson().toJson(externalId));
          gs_json_object_data.args.put("state",new Gson().toJson(state));
          gs_json_object_data.method = "doorAction";
          gs_json_object_data.interfaceName = "core.arx.IArxManager";
          String result = transport.send(gs_json_object_data);
     }

     /**
     * communication with the arx server.
     *
     * @author boggi
     */
     public java.util.List getAllAccessCategories()  throws Exception  {
          JsonObject2 gs_json_object_data = new JsonObject2();
          gs_json_object_data.args = new LinkedHashMap();
          gs_json_object_data.method = "getAllAccessCategories";
          gs_json_object_data.interfaceName = "core.arx.IArxManager";
          String result = transport.send(gs_json_object_data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<java.util.List<com.thundashop.core.arx.AccessCategory>>() {}.getType();
          java.util.List object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     * communication with the arx server.
     *
     * @author boggi
     */
     public java.util.List getAllDoors()  throws Exception  {
          JsonObject2 gs_json_object_data = new JsonObject2();
          gs_json_object_data.args = new LinkedHashMap();
          gs_json_object_data.method = "getAllDoors";
          gs_json_object_data.interfaceName = "core.arx.IArxManager";
          String result = transport.send(gs_json_object_data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<java.util.List<com.thundashop.core.arx.Door>>() {}.getType();
          java.util.List object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     * communication with the arx server.
     *
     * @author boggi
     */
     public java.util.List getAllPersons()  throws Exception  {
          JsonObject2 gs_json_object_data = new JsonObject2();
          gs_json_object_data.args = new LinkedHashMap();
          gs_json_object_data.method = "getAllPersons";
          gs_json_object_data.interfaceName = "core.arx.IArxManager";
          String result = transport.send(gs_json_object_data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<java.util.List<com.thundashop.core.arx.Person>>() {}.getType();
          java.util.List object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     * communication with the arx server.
     *
     * @author boggi
     */
     public java.util.List getLogForDoor(java.lang.String externalId, long start, long end)  throws Exception  {
          JsonObject2 gs_json_object_data = new JsonObject2();
          gs_json_object_data.args = new LinkedHashMap();
          gs_json_object_data.args.put("externalId",new Gson().toJson(externalId));
          gs_json_object_data.args.put("start",new Gson().toJson(start));
          gs_json_object_data.args.put("end",new Gson().toJson(end));
          gs_json_object_data.method = "getLogForDoor";
          gs_json_object_data.interfaceName = "core.arx.IArxManager";
          String result = transport.send(gs_json_object_data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<java.util.List<com.thundashop.core.arx.AccessLog>>() {}.getType();
          java.util.List object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     * communication with the arx server.
     *
     * @author boggi
     */
     public boolean isLoggedOn()  throws Exception  {
          JsonObject2 gs_json_object_data = new JsonObject2();
          gs_json_object_data.args = new LinkedHashMap();
          gs_json_object_data.method = "isLoggedOn";
          gs_json_object_data.interfaceName = "core.arx.IArxManager";
          String result = transport.send(gs_json_object_data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<Boolean>() {}.getType();
          Boolean object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     * communication with the arx server.
     *
     * @author boggi
     */
     public boolean logonToArx(java.lang.String hostname, java.lang.String username, java.lang.String password)  throws Exception  {
          JsonObject2 gs_json_object_data = new JsonObject2();
          gs_json_object_data.args = new LinkedHashMap();
          gs_json_object_data.args.put("hostname",new Gson().toJson(hostname));
          gs_json_object_data.args.put("username",new Gson().toJson(username));
          gs_json_object_data.args.put("password",new Gson().toJson(password));
          gs_json_object_data.method = "logonToArx";
          gs_json_object_data.interfaceName = "core.arx.IArxManager";
          String result = transport.send(gs_json_object_data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<Boolean>() {}.getType();
          Boolean object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

}
