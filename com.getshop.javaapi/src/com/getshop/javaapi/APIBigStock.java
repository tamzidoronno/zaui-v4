package com.getshop.javaapi;

import com.google.gson.GsonBuilder;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.LinkedHashMap;
import com.thundashop.core.common.JsonObject2;
public class APIBigStock {

      public Transporter transport;

      public APIBigStock(Transporter transport){
           this.transport = transport;
      }

     /**
     * Update the credit account.
     *
     * @param credits
     * @param password
     * @throws ErrorException
     */
     public void addGetShopImageIdToBigStockOrder(java.lang.String downloadUrl, java.lang.String imageId)  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.args.put("downloadUrl",new Gson().toJson(downloadUrl));
          data.args.put("imageId",new Gson().toJson(imageId));
          data.method = "addGetShopImageIdToBigStockOrder";
          data.interfaceName = "core.bigstock.IBigStock";
          String result = transport.send(data);
     }

     /**
     * Update the credit account.
     *
     * @param credits
     * @param password
     * @throws ErrorException
     */
     public int getAvailableCredits()  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.method = "getAvailableCredits";
          data.interfaceName = "core.bigstock.IBigStock";
          String result = transport.send(data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<Integer>() {}.getType();
          Integer object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     * Purchases a picture from the bigstock library.
     *
     * @param imageId
     * @param sizeCode
     * @return downloadUrl
     * @throws ErrorException
     */
     public java.lang.String purchaseImage(java.lang.String imageId, java.lang.String sizeCode)  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.args.put("imageId",new Gson().toJson(imageId));
          data.args.put("sizeCode",new Gson().toJson(sizeCode));
          data.method = "purchaseImage";
          data.interfaceName = "core.bigstock.IBigStock";
          String result = transport.send(data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<java.lang.String>() {}.getType();
          java.lang.String object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     * Update the credit account.
     *
     * @param credits
     * @param password
     * @throws ErrorException
     */
     public void setCreditAccount(int credits, java.lang.String password)  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.args.put("credits",new Gson().toJson(credits));
          data.args.put("password",new Gson().toJson(password));
          data.method = "setCreditAccount";
          data.interfaceName = "core.bigstock.IBigStock";
          String result = transport.send(data);
     }

}
