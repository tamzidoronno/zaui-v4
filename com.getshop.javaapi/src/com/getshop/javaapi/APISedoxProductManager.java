package com.getshop.javaapi;

import com.google.gson.GsonBuilder;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.LinkedHashMap;
import com.thundashop.core.common.JsonObject2;
public class APISedoxProductManager {

      public Transporter transport;

      public APISedoxProductManager(Transporter transport){
           this.transport = transport;
      }

     /**
     * Return the products created by days back.
     * day = 0 // Means that it will returns the list of todays files
     * day = 1 // Means that it will returns the list of yesterdays files
     *
     * @param day
     * @return
     * @throws ErrorException
     */
     public void addFileToProduct(java.lang.String base64EncodedFile, java.lang.String fileName, java.lang.String fileType, java.lang.String productId)  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.args.put("base64EncodedFile",new Gson().toJson(base64EncodedFile));
          data.args.put("fileName",new Gson().toJson(fileName));
          data.args.put("fileType",new Gson().toJson(fileType));
          data.args.put("productId",new Gson().toJson(productId));
          data.method = "addFileToProduct";
          data.interfaceName = "core.sedox.ISedoxProductManager";
          String result = transport.send(data);
     }

     /**
     * Return the products created by days back.
     * day = 0 // Means that it will returns the list of todays files
     * day = 1 // Means that it will returns the list of yesterdays files
     *
     * @param day
     * @return
     * @throws ErrorException
     */
     public void createSedoxProduct(com.thundashop.core.sedox.SedoxProduct sedoxProduct, java.lang.String base64encodedOriginalFile, java.lang.String originalFileName)  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.args.put("sedoxProduct",new Gson().toJson(sedoxProduct));
          data.args.put("base64encodedOriginalFile",new Gson().toJson(base64encodedOriginalFile));
          data.args.put("originalFileName",new Gson().toJson(originalFileName));
          data.method = "createSedoxProduct";
          data.interfaceName = "core.sedox.ISedoxProductManager";
          String result = transport.send(data);
     }

     /**
     *
     * @author ktonder
     */
     public java.util.List getAllUsersWithNegativeCreditLimit()  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.method = "getAllUsersWithNegativeCreditLimit";
          data.interfaceName = "core.sedox.ISedoxProductManager";
          String result = transport.send(data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<java.util.List<com.thundashop.core.sedox.SedoxUser>>() {}.getType();
          java.util.List object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     *
     * @author ktonder
     */
     public java.util.List getFileDevelopers()  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.method = "getFileDevelopers";
          data.interfaceName = "core.sedox.ISedoxProductManager";
          String result = transport.send(data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<java.util.List<com.thundashop.core.sedox.SedoxUser>>() {}.getType();
          java.util.List object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     * Return the products created by days back.
     * day = 0 // Means that it will returns the list of todays files
     * day = 1 // Means that it will returns the list of yesterdays files
     *
     * @param day
     * @return
     * @throws ErrorException
     */
     public com.thundashop.core.sedox.SedoxProduct getProductById(java.lang.String id)  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.args.put("id",new Gson().toJson(id));
          data.method = "getProductById";
          data.interfaceName = "core.sedox.ISedoxProductManager";
          String result = transport.send(data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<com.thundashop.core.sedox.SedoxProduct>() {}.getType();
          com.thundashop.core.sedox.SedoxProduct object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     * Return the products created by days back.
     * day = 0 // Means that it will returns the list of todays files
     * day = 1 // Means that it will returns the list of yesterdays files
     *
     * @param day
     * @return
     * @throws ErrorException
     */
     public java.util.List getProductsByDaysBack(int day)  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.args.put("day",new Gson().toJson(day));
          data.method = "getProductsByDaysBack";
          data.interfaceName = "core.sedox.ISedoxProductManager";
          String result = transport.send(data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<java.util.List<com.thundashop.core.sedox.SedoxProduct>>() {}.getType();
          java.util.List object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     *
     * @author ktonder
     */
     public java.util.List getProductsFirstUploadedByCurrentUser()  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.method = "getProductsFirstUploadedByCurrentUser";
          data.interfaceName = "core.sedox.ISedoxProductManager";
          String result = transport.send(data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<java.util.List<com.thundashop.core.sedox.SedoxProduct>>() {}.getType();
          java.util.List object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     * Return the products created by days back.
     * day = 0 // Means that it will returns the list of todays files
     * day = 1 // Means that it will returns the list of yesterdays files
     *
     * @param day
     * @return
     * @throws ErrorException
     */
     public com.thundashop.core.sedox.SedoxProduct getSedoxProductByMd5Sum(java.lang.String md5sum)  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.args.put("md5sum",new Gson().toJson(md5sum));
          data.method = "getSedoxProductByMd5Sum";
          data.interfaceName = "core.sedox.ISedoxProductManager";
          String result = transport.send(data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<com.thundashop.core.sedox.SedoxProduct>() {}.getType();
          com.thundashop.core.sedox.SedoxProduct object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     *
     * @author ktonder
     */
     public com.thundashop.core.sedox.SedoxUser getSedoxUserAccount()  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.method = "getSedoxUserAccount";
          data.interfaceName = "core.sedox.ISedoxProductManager";
          String result = transport.send(data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<com.thundashop.core.sedox.SedoxUser>() {}.getType();
          com.thundashop.core.sedox.SedoxUser object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     * Return the products created by days back.
     * day = 0 // Means that it will returns the list of todays files
     * day = 1 // Means that it will returns the list of yesterdays files
     *
     * @param day
     * @return
     * @throws ErrorException
     */
     public void requestSpecialFile(java.lang.String productId, java.lang.String comment)  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.args.put("productId",new Gson().toJson(productId));
          data.args.put("comment",new Gson().toJson(comment));
          data.method = "requestSpecialFile";
          data.interfaceName = "core.sedox.ISedoxProductManager";
          String result = transport.send(data);
     }

     /**
     *
     * @author ktonder
     */
     public com.thundashop.core.sedox.SedoxProductSearchPage search(java.lang.String searchString)  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.args.put("searchString",new Gson().toJson(searchString));
          data.method = "search";
          data.interfaceName = "core.sedox.ISedoxProductManager";
          String result = transport.send(data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<com.thundashop.core.sedox.SedoxProductSearchPage>() {}.getType();
          com.thundashop.core.sedox.SedoxProductSearchPage object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     *
     * @author ktonder
     */
     public void sync()  throws Exception  {
          JsonObject2 data = new JsonObject2();
          data.args = new LinkedHashMap();
          data.method = "sync";
          data.interfaceName = "core.sedox.ISedoxProductManager";
          String result = transport.send(data);
     }

}
