package com.getshop.pullserver;

import com.google.gson.GsonBuilder;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.LinkedHashMap;
public class APIPullServerManager {

      public Transporter transport;

      public APIPullServerManager(Transporter transport){
           this.transport = transport;
      }

     /**
     *
     * @author ktonder
     */
     public java.util.List getPullMessages(java.lang.String keyId, java.lang.String storeId)  throws Exception  {
          JsonObject2 gs_json_object_data = new JsonObject2();
          gs_json_object_data.args = new LinkedHashMap();
          gs_json_object_data.args.put("keyId",new Gson().toJson(keyId));
          gs_json_object_data.args.put("storeId",new Gson().toJson(storeId));
          gs_json_object_data.method = "getPullMessages";
          gs_json_object_data.interfaceName = "core.pullserver.IPullServerManager";
          String result = transport.send(gs_json_object_data);
          Gson gson = new GsonBuilder().serializeNulls().create();
          Type typeJson_3323322222_autogenerated = new TypeToken<java.util.List<PullMessage>>() {}.getType();
          java.util.List object = gson.fromJson(result, typeJson_3323322222_autogenerated);
          return object;
     }

     /**
     *
     * @author ktonder
     */
     public void markMessageAsReceived(java.lang.String messageId, java.lang.String storeId)  throws Exception  {
          JsonObject2 gs_json_object_data = new JsonObject2();
          gs_json_object_data.args = new LinkedHashMap();
          gs_json_object_data.args.put("messageId",new Gson().toJson(messageId));
          gs_json_object_data.args.put("storeId",new Gson().toJson(storeId));
          gs_json_object_data.method = "markMessageAsReceived";
          gs_json_object_data.interfaceName = "core.pullserver.IPullServerManager";
          String result = transport.send(gs_json_object_data);
     }

     /**
     *
     * @author ktonder
     */
     public void savePullMessage(PullMessage pullMessage)  throws Exception  {
          JsonObject2 gs_json_object_data = new JsonObject2();
          gs_json_object_data.args = new LinkedHashMap();
          gs_json_object_data.args.put("pullMessage",new Gson().toJson(pullMessage));
          gs_json_object_data.method = "savePullMessage";
          gs_json_object_data.interfaceName = "core.pullserver.IPullServerManager";
          String result = transport.send(gs_json_object_data);
     }

}
