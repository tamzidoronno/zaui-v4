apply plugin: 'application'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'com.thundashop.core.start.Runner'
}

mainClassName  = 'com.thundashop.core.start.Runner'

task fatJar(type: Jar) {
    from(project(':core').sourceSets.main.resources)
    from files(sourceSets.main.output.classesDirs)
    from {configurations.compile.collect {zipTree(it)}} {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
}
buildscript {
        // this is used only for startGenerator script
        dependencies {
            classpath group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'
        }
}
task startGenerator(type:JavaExec) {
    main = 'com.thundashop.core.apigenerator.GenerateApi'
    classpath = sourceSets.main.output.classesDirs + sourceSets.main.compileClasspath
}

task generateJavascriptApi(type:JavaExec) {
    main = 'com.thundashop.core.start.GenerateJavascriptApi'
    classpath = sourceSets.main.runtimeClasspath
}


manifest {
    attributes 'Main-Class': 'com.thundashop.core.start.Runner'
    }
}

dependencies {
    compile project(":messages")
    compile project(":repository")
    compile fileTree(dir: '../libs', include: ['*.jar'])
    implementation group: 'ca.pjer', name: 'logback-awslogs-appender', version: '1.5.0'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'software.amazon.awssdk', name: 'bundle', version: '2.16.83'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.5'
    implementation group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.4'
    implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.5'
    implementation group: 'org.apache.httpcomponents', name: 'httpcore-nio', version: '4.4.5'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.3'
}


task infoSourceSets(){
    println("result:")
    println(sourceSets.main.output.classesDirs)
    println(sourceSets.main.compileClasspath.asPath)
}
